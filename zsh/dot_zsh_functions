# -*- mode: sh -*-

export PROXY_HOST=proxy.example.com
export PROXY_PORT=1234
export PROXY=http://$PROXY_HOST:$PROXY_PORT
export NO_PROXY=".example.com"
export JAVA_NO_PROXY="*.example.com|localhost"

# Include the above variables in a file called proxies.sh in your home
# directory to customize. (PROXY is computed, so no need to set it.)

if [ -e ~/proxies.sh ]; then
    source ~/proxies.sh
    export PROXY=http://$PROXY_HOST:$PROXY_PORT
fi


function proxy()
{
    export PROXY=http://$PROXY_HOST:$PROXY_PORT
    export HTTP_PROXY=$PROXY
    export http_proxy=$PROXY
    export HTTPS_PROXY=$PROXY
    export https_proxy=$PROXY
    export FTP_PROXY=$PROXY
    export ftp_proxy=$PROXY
    export NO_PROXY=$NO_PROXY
    export no_proxy=$NO_PROXY

    # And java (todo: Probably the same thing as GRADLE_OPTS)
    export JAVA_OPTS="-Dhttp.proxyHost=${PROXY_HOST} -Dhttp.proxyPort=${PROXY_PORT} -Dhttp.nonProxyHosts=\"${JAVA_NO_PROXY}\" -Dhttps.proxyHost=${PROXY_HOST} -Dhttps.proxyPort=${PROXY_PORT} -Dhttps.nonProxyHosts=\"${JAVA_NO_PROXY}\""
}

function no_proxy()
{
    unset http_proxy
    unset HTTP_PROXY
    unset HTTPS_PROXY
    unset https_proxy
    unset FTP_PROXY
    unset ftp_proxy
    unset no_proxy
    unset NO_PROXY
    unset JAVA_OPTS
}




# Python

export VENV_HOME=$HOME/venv

# Set the python virtualenv
function pygo ()
{
    local venv_name=$1
    if [ "$venv_name" == "" ]; then
        echo "usage: pygo <venv-name>"
        return 1
    fi

    if [ -d "$venv_name" ]; then
        source $venv_name/bin/activate
    else
        if [ -d "$VENV_HOME/$venv_name" ]; then
            source  $VENV_HOME/$venv_name/bin/activate
        else
            echo "No venv '$venv_name' in cwd or '$VENV_HOME'"
            return 1
        fi
    fi
}

# list possible virtualenvs to activate

function pylist ()
{
    find $VENV_HOME -depth 1 -a -type d -exec bash -c "if [ -e \"{}/bin/activate\" ]; then echo \"{}/\"; fi" \; 2>/dev/null
    find . -depth 1 -a -type d -exec bash -c "if [ -e \"{}/bin/activate\" ]; then echo \"{}/\"; fi" \; 2>/dev/null
}
